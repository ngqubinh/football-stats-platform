services:
  backend:
    build:
      context: ../..
      dockerfile: infra/docker/FSP.Dockerfile
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # - ConnectionStrings__postgreSQL=Host=db;Database=football_stats;Username=postgres;Password=password --> local
      - ConnectionStrings__postgreSQL=${RDS_CONNECTION_STRING}
    # depends_on:
    #   db:
    #     condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # frontend:
  #   build:
  #     context: ../..
  #     dockerfile: infra/docker/frontend.Dockerfile
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NEXT_PUBLIC_API_URL=http://localhost:5000
  #   depends_on:
  #     backend:
  #       condition: service_healthy
  #   healthcheck:
  #     test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000 || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 30s

  # db:
  #   image: postgres:15
  #   environment:
  #     POSTGRES_DB: football_stats
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: password
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres -d football_stats"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 30s

# volumes:
#   postgres_data: --> Removed since RDS is used